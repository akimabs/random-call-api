{"version":3,"sources":["assets/github.svg","components/header.js","components/card.js","components/mansory-wrapper.js","contributor/random-ai-art.js","contributor/random-anime-wink.js","contributor/random-cat-image.js","contributor/random-dog-image.js","contributor/random-food-image.js","contributor/random-fox-image.js","contributor/random-grayscale-image.js","contributor/random-image-unsplash.js","contributor/random-kanji.js","contributor/random-lorem-pixel-image.js","contributor/random-meme-image.js","contributor/random-picsum-image.js","contributor/random-pixel-monsters-image.js","contributor/random-pokemon-image.js","contributor/random-quote.js","contributor/random-robot-image.js","contributor/random-tech-images.js","contributor/random-unsplash-image.js","contributor/random-user-profile.js","contributor/random-cartoon-char.js","contributor/index.js","contributor/random-answer-image.js","contributor/random-cat-facts.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","href","target","src","github","Card","data","children","username","avatar","alt","apiUrl","apiName","apiDescription","MasonryWrapper","breakpointCols","default","1100","700","500","columnClassName","RandomAiArtImage","RandomAnimeWink","useState","link","setData","fetchData","a","axios","get","response","status","Error","useEffect","RandomCatImage","dispatching","setDispatching","randomImg","setRandomImg","getRandomCat","file","RandomDogImage","then","res","catch","err","console","log","message","RandomFoodImage","image","RandomFoxImage","RandomGrayscaleImage","RandomImageUnsplash","API_URL","RandomKanji","currentKanji","setCurrentKanji","getKanji","useCallback","allKanji","getKanjiInformation","dataLength","length","Math","floor","random","error","kanji","kanjiInformation","stroke_count","meanings","kun_readings","on_readings","KanjiCard","id","map","reading","idx","RandomLoremPixelImage","RandomMemeImage","img","setImg","memes","preview","RandomPicsumImage","RandomPixelMonstersImage","randomInteger","min","max","RandomPokemonImage","RandomQuotesApi","getRandomQuote","class","content","author","RandomRobotImage","loading","RandomTechImage","RandomUnsplashImage","RandomUserProfile","setLoading","getRandomUserProfile","results","picture","large","name","first","last","gender","phone","randomizer","BASE_URL","data_contributor","RandomTechImages","answer","setAnswer","getAnswerRandom","randomFact","setRandomFact","App","index","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.817d9f3b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github.b5d4c591.svg\";","import React from \"react\";\nimport github from \"../assets/github.svg\";\n\nexport default function Header(props) {\n  return (\n    <div className=\"mx-4 my-8\">\n      <div className=\"flex items-baseline\">\n        <a className=\"flex-auto\" href=\"/random-call-api\">\n          <h1 className=\"my-2 text-4xl font-bold font-sans px-4 font-bold\">\n            Random Call APIs\n          </h1>\n        </a>\n        <div className=\"\">\n          <a\n            href=\"https://github.com/akimabs/random-call-api\"\n            target=\"blank\"\n            className=\"inline-block\"\n          >\n            <embed className=\"h-8 w-8 pointer-events-none\" src={github} />\n          </a>\n        </div>\n      </div>\n      <hr />\n    </div>\n  );\n}\n","export default function Card({ data, children }) {\n  return (\n    <div className=\"mx-4 my-8 rounded-md p-4 md:px-4\">\n      <div className=\"flex flex-col\">\n        <a href={\"https://github.com/\" + data.username} target=\"blank\">\n          <div className=\"inline-flex items-center hover:bg-blue-100 p-2 rounded-md cursor-pointer\">\n            <img\n              className=\"rounded-full h-8 w-8\"\n              src={data.avatar}\n              alt=\"Contributor's avatar\"\n            />\n            <h1 className=\"px-2 text-xl\">{data.username}</h1>\n          </div>\n        </a>\n        <a href={data.apiUrl} target=\"blank\">\n          <div className=\"inline-flex items-center hover:bg-blue-100 p-2 rounded-md cursor-pointer\">\n            <img\n              className=\"rounded-full h-5 w-5\"\n              src=\"https://static.thenounproject.com/png/1429392-200.png\"\n              alt=\"Hyperlink icon\"\n            />\n            <h1 className=\"px-2 text-l\">{data.apiName}</h1>\n          </div>\n        </a>\n      </div>\n      <h1 className=\"px-2 text-l\">{data.apiDescription}</h1>\n      {children}\n    </div>\n  );\n}\n","import Masonry from \"react-masonry-css\";\nimport \"./index.css\";\n\nexport default function MasonryWrapper({ children }) {\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 1,\n  };\n  return (\n    <Masonry\n      breakpointCols={breakpointColumnsObj}\n      className=\"my-masonry-grid\"\n      columnClassName=\"my-masonry-grid_column\"\n    >\n      {children}\n    </Masonry>\n  );\n}\n","import { Card } from \"../components\";\n\nconst RandomAiArtImage = () => {\n  return (\n    <Card\n      data={{\n        username: \"sansekai\",\n        avatar: \"https://avatars.githubusercontent.com/u/34540627?v=4\",\n        apiUrl: \"https://thisartworkdoesnotexist.com/\",\n        apiName: \"ai-artwork\",\n        apiDescription: \"Responds with randomly generated artwork.\",\n      }}\n    >\n      <img\n        className=\"rounded-sm pt-2\"\n        src=\"https://thisartworkdoesnotexist.com/\"\n        alt=\"aiart\"\n      />\n    </Card>\n  );\n};\n\nexport default RandomAiArtImage;\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nimport { Card } from \"../components\";\n\nconst BASE_URL = \"https://some-random-api.ml/animu/wink\";\n\nconst RandomAnimeWink = () => {\n    const [data, setData] = useState({ link: \"\" });\n    const fetchData = async () => {\n        const response = await axios.get(BASE_URL);\n        if (response.status !== 200) {\n            throw new Error(\"Fetching err\");\n        }\n        setData(response?.data);\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    return (\n        <Card\n            data={{\n                username: \"bayue48\",\n                avatar: \"https://avatars.githubusercontent.com/u/70324722?v=4\",\n                apiUrl: \"https://some-random-api.ml/animu/wink\",\n                apiName: \"some random api\",\n                apiDescription: \"Responds with randomly generated anime wink.\",\n            }}\n        >\n            <img\n                className=\"rounded-sm h-200 w-200 pt-2\"\n                src={data?.link}\n                alt=\"food\"\n            />\n        </Card>\n    );\n};\n\nexport default RandomAnimeWink;","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// components\nimport { Card } from \"../components\";\n// baseurl api's\nconst BASE_URL = \"https://aws.random.cat/meow\"\n\nconst RandomCatImage = () => {\n  const [dispatching, setDispatching] = useState(false)\n  const [randomImg, setRandomImg] = useState('')\n\n  const getRandomCat = async () => {\n    setDispatching(true)\n    const response = await axios.get(BASE_URL);\n    if (response.status !== 200) {\n      throw new Error(\"Fetching err\");\n    }\n    setRandomImg(response?.data?.file)\n    setDispatching(false)\n  }\n\n  useEffect(()=> { \n    getRandomCat();\n    return () => {\n      setDispatching(false)\n    }\n  },[])\n  \n  return (\n    <Card\n      data={{\n        username: \"Anggasayogo\",\n        avatar: \"https://avatars.githubusercontent.com/u/31529898?s=96&v=4\",\n        apiUrl: `https://aws.random.cat/meow`,\n        apiName: \"Random Cat Image\",\n        apiDescription: \"Random Api for displaying cat Image\",\n      }}\n    >\n      {\n        dispatching ? (\n          <p className=\"text-m my-3 text-center\">Loading...</p>\n        ) : (\n          <img\n            className=\"rounded-sm pt-2\"\n            src={randomImg}\n            alt=\"techImage\"\n          />\n        )\n      }\n    </Card>\n  );\n};\n\nexport default RandomCatImage;\n","import React, { useEffect, useState } from 'react'\nimport { Card } from '../components'\nimport axios from 'axios'\n\nconst RandomDogImage = () => {\n    const [data, setData] = useState()\n    const BASE_URL = 'https://dog.ceo/api/breeds/image/random'\n\n    useEffect(() => {\n        axios\n        .get(BASE_URL)\n        .then(res => setData(res.data))\n        .catch(err => console.log(err))\n    }, [])\n\n    return (\n        <Card data={{\n            username: \"TaufikAkbar7\",\n            avatar: \"https://avatars.githubusercontent.com/u/63723517?v=4\",\n            apiUrl: \"https://dog.ceo/api/breeds/image/random\",\n            apiName: \"random-dog\",\n            apiDescription: \"a random api for display random dog image\",\n        }}>\n            {data && (\n                <img\n                className=\"rounded-sm h-200 w-200 pt-2\"\n                src={data.message}\n                alt=\"dogimage\"\n              />\n            )}\n        </Card>\n    )\n}\n\nexport default RandomDogImage\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport { Card } from \"../components\";\n\nconst BASE_URL = \"https://foodish-api.herokuapp.com/api/\";\n\nconst RandomFoodImage = () => {\n  const [data, setData] = useState({ image: \"\", link: \"\" });\n  const fetchData = async () => {\n    const response = await axios.get(BASE_URL);\n    if (response.status !== 200) {\n      throw new Error(\"Fetching err\");\n    }\n    setData(response?.data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <Card\n      data={{\n        username: \"alannugraha1\",\n        avatar: \"https://avatars.githubusercontent.com/u/55216349?v=4\",\n        apiUrl: \"https://foodish-api.herokuapp.com/api/\",\n        apiName: \"floodish\",\n        apiDescription: \"a random api for display random food image\",\n      }}\n    >\n      <img\n        className=\"rounded-sm h-200 w-200 pt-2\"\n        src={data?.image}\n        alt=\"food\"\n      />\n    </Card>\n  );\n};\n\nexport default RandomFoodImage;\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport { Card } from \"../components\";\n\nconst BASE_URL = \"https://randomfox.ca/floof/\";\n\nconst RandomFoxImage = () => {\n  const [data, setData] = useState({ image: \"\", link: \"\" });\n  const fetchData = async () => {\n    const response = await axios.get(BASE_URL);\n    if (response.status !== 200) {\n      throw new Error(\"Fetching err\");\n    }\n    setData(response?.data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <Card\n      data={{\n        username: \"akimabs\",\n        avatar: \"https://avatars.githubusercontent.com/u/46390089?v=4\",\n        apiUrl: \"https://randomfox.ca/floof/\",\n        apiName: \"random-fox\",\n        apiDescription: \"a random api for display random fox image\",\n      }}\n    >\n      <img\n        className=\"rounded-sm h-200 w-200 pt-2\"\n        src={data?.image}\n        alt=\"foximage\"\n      />\n    </Card>\n  );\n};\n\nexport default RandomFoxImage;\n","import { Card } from '../components';\n\nconst RandomGrayscaleImage = () => {\n  return (\n    <Card\n      data={{\n        username: 'ddikodroid',\n        avatar: 'https://avatars.githubusercontent.com/u/4207774?v=4',\n        apiUrl: 'https://picsum.photos',\n        apiName: 'lorem picsum',\n        apiDescription: 'the lorem ipsum for photos, but in grayscale only',\n      }}>\n      <img\n        className='rounded-sm pt-2 h-400 w-400'\n        src='https://picsum.photos/400/400?grayscale'\n        alt='grayscale'\n      />\n    </Card>\n  );\n};\n\nexport default RandomGrayscaleImage;\n","import { Card } from \"../components\";\n\nconst RandomImageUnsplash = () => {\n  return (\n    <Card\n      data={{\n        username: \"Risal Walangadi\",\n        avatar: \"https://avatars.githubusercontent.com/u/32890714?v=4\",\n        apiUrl: \"https://source.unsplash.com\",\n        apiName: \"random-image-unsplash\",\n        apiDescription: \"Random image from unsplash\",\n      }}\n    >\n      <img\n        className=\"rounded-sm pt-2\"\n        src=\"https://source.unsplash.com/random/400x400\"\n        alt=\"unsplashImage\"\n      />\n    </Card>\n  );\n};\n\nexport default RandomImageUnsplash;\n","import axios from \"axios\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nimport { Card } from \"../components\";\n\nconst API_URL = \"https://kanjiapi.dev/v1/kanji\";\nconst generateRandomIndex = (dataLength) => {\n  return Math.floor(Math.random() * dataLength);\n};\n\nconst RandomKanji = () => {\n  const [currentKanji, setCurrentKanji] = useState(\"\");\n\n  const getKanji = useCallback(async () => {\n    try {\n      const { data: allKanji, status } = await axios.get(`${API_URL}/all`);\n      if (status === 200) {\n        getKanjiInformation(allKanji[generateRandomIndex(allKanji?.length)]);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n\n  const getKanjiInformation = async (kanji) => {\n    try {\n      const { data: kanjiInformation } = await axios.get(`${API_URL}/${kanji}`);\n\n      setCurrentKanji(kanjiInformation);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => getKanji(), [getKanji]);\n\n  return (\n    <Card\n      data={{\n        username: \"ziunadev\",\n        avatar: \"https://avatars.githubusercontent.com/u/71458677?v=4\",\n        apiUrl: \"https://kanjiapi.dev/\",\n        apiName: \"random-kanji\",\n        apiDescription: `\n          This api generate random kanji, with some of its informations.\n        `,\n      }}\n    >\n      {currentKanji && (\n        <KanjiCard\n          data={{\n            kanji: currentKanji.kanji,\n            stroke_count: currentKanji.stroke_count,\n            meanings: currentKanji.meanings,\n            kun_readings: currentKanji.kun_readings,\n            on_readings: currentKanji.on_readings,\n          }}\n        />\n      )}\n    </Card>\n  );\n};\n\nexport default RandomKanji;\n\nconst KanjiCard = ({ data }) => {\n  return (\n    <div className=\"w-full flex flex-col space-y-4 items-center\">\n      <div\n        id=\"kanji\"\n        className=\"h-48 lg:h-48 w-full 2xl:h-64 bg-gray-200 flex items-center justify-center relative rounded\"\n      >\n        <div className=\"absolute top-1 right-1 flex items-center flex-col justify-center\">\n          <p className=\"text-xs\">Strokes</p>\n          <span className=\"text-lg font-bold\">{data.stroke_count}</span>\n        </div>\n        <span className=\"text-9xl\">{data.kanji}</span>\n      </div>\n      <div id=\"kanji-informations\" className=\"w-full flex flex-col space-y-4\">\n        <div\n          id=\"on-readings\"\n          className=\"w-full flex flex-row space-x-4 md:space-x-3\"\n        >\n          <span className=\"text-sm font-semibold w-16\">On'yomi</span>\n          <div className=\"flex-grow h-full grid grid-cols-3 gap-4\">\n            {data.on_readings &&\n              data.on_readings.map((reading, idx) => (\n                <div\n                  key={idx}\n                  className=\"py-1 px-2 bg-blue-100 flex items-center justify-center rounded\"\n                >\n                  <span className=\"text-sm\">{reading}</span>\n                </div>\n              ))}\n          </div>\n        </div>\n        <div\n          id=\"kun-readings\"\n          className=\"w-full flex flex-row space-x-4 md:space-x-3\"\n        >\n          <span className=\"text-sm font-semibold w-16\">Kun'yomi</span>\n          <div className=\"flex-grow h-full grid grid-cols-2 gap-4\">\n            {data.kun_readings &&\n              data.kun_readings.map((reading, idx) => (\n                <div\n                  key={idx}\n                  className=\"py-1 px-2 bg-blue-100 flex items-center justify-center rounded\"\n                >\n                  <span className=\"text-sm\">{reading}</span>\n                </div>\n              ))}\n          </div>\n        </div>\n        <div\n          id=\"meanings\"\n          className=\"w-full flex flex-row space-x-4 md:space-x-3\"\n        >\n          <span className=\"text-sm font-semibold w-16\">Meanings</span>\n          <div className=\"flex-grow h-full grid grid-cols-1 gap-x-4 gap-y-2\">\n            {data.meanings &&\n              data.meanings.map((reading, idx) => (\n                <div\n                  key={idx}\n                  className=\"py-1 px-2 bg-blue-100 flex items-center justify-center rounded\"\n                >\n                  <span className=\"text-sm\">{reading}</span>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Card } from '../components';\n\n\n\nconst RandomLoremPixelImage =() => {\n    return (\n        <Card\n      data={{\n        username: \"kfajarbowo\",\n        avatar: \"https://avatars.githubusercontent.com/u/54922255?s=40&v=4\",\n        apiUrl: \"http://lorempixel.com/200/300/nature\",\n        apiName: \"lorempixel.com\",\n        apiDescription: \"A random api for display nature image with custom dimention\",\n      }}\n    >\n      <img\n        className=\"rounded-sm pt-2\"\n        src=\"http://lorempixel.com/200/300/nature\"\n        alt=\"natureImage\"\n      />\n    </Card>\n    )\n}\n\nexport default RandomLoremPixelImage\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport { Card } from \"../components\";\n\nconst RandomMemeImage = () => {\n  const [img, setImg] = useState('');\n  const fetchData = async () => {\n    const response = await axios.get('https://meme-api.herokuapp.com/gimme/1');\n    if (response.status !== 200) {\n      throw new Error(\"Fetching err\");\n    }\n    setImg(response?.data.memes[0].preview[2]);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <Card\n      data={{\n        username: \"Re-Creators\",\n        avatar: \"https://avatars.githubusercontent.com/u/51537231?v=4\",\n        apiUrl: \"https://github.com/D3vd/Meme_Api\",\n        apiName: \"random-meme\",\n        apiDescription: \"Getting random meme from reddit\",\n      }}\n    >\n      <img\n        className=\"rounded-sm pt-2\"\n        src={img}\n        alt=\"foximage\"\n      />\n    </Card>\n  );\n};\n\nexport default RandomMemeImage;","import { Card } from \"../components\";\n\n// avatar can get from here(avatar_url)\n// https://api.github.com/users/akimabs\n\nconst RandomPicsumImage = () => {\n  return (\n    <Card\n      data={{\n        username: \"hendraaagil\",\n        avatar: \"https://avatars.githubusercontent.com/u/54741166?v=4\",\n        apiUrl: \"https://picsum.photos\",\n        apiName: \"random lorem picsum\",\n        apiDescription: \"generate a random image with custom dimension\",\n      }}\n    >\n      <img\n        className=\"rounded-sm h-200 w-200 pt-2\"\n        src=\"https://picsum.photos/200\"\n        alt=\"random-pict\"\n      />\n    </Card>\n  );\n};\n\nexport default RandomPicsumImage;\n","import React from \"react\";\nimport { Card } from \"../components\";\n\nconst RandomPixelMonstersImage = () => {\n  return (\n    <Card\n      data={{\n        username: \"anggaprytn\",\n        avatar: \"https://avatars.githubusercontent.com/u/20864493?v=4\",\n        apiUrl: \"https://pixelencounter.com/Api\",\n        apiName: \"Pixel Encounter API\",\n        apiDescription: \"Get a monster with random pattern as image.\",\n      }}\n    >\n      <img\n        className=\"rounded-sm pt-2 rounded mx-auto d-block\"\n        src=\"https://app.pixelencounter.com/api/basic/monsters/random/png?size=100\"\n        alt=\"monsters\"\n      />\n    </Card>\n  );\n};\n\nexport default RandomPixelMonstersImage;\n","import { Card } from '../components';\n\nfunction randomInteger(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst RandomPokemonImage = () => {\n  return (\n    <Card\n      data={{\n        username: 'ddikodroid',\n        avatar: 'https://avatars.githubusercontent.com/u/4207774?v=4',\n        apiUrl: 'https://pokeapi.co/api/v2/',\n        apiName: 'pokeapi-v2',\n        apiDescription: 'shows random pokemon sprite',\n      }}>\n      <img\n        className='rounded-sm pt-2 h-400 w-400'\n        src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\n          randomInteger(0, 150) + 1\n        }.png`}\n        alt='pokemon'\n      />\n    </Card>\n  );\n};\n\nexport default RandomPokemonImage;\nexport {\n  randomInteger\n}","import { useState, useEffect } from \"react\";\nimport { Card } from \"../components\";\nimport axios from \"axios\";\n\n// avatar can get from here(avatar_url)\n// https://api.github.com/users/akimabs\n\nconst RandomQuotesApi = () => {\n  const [data, setData] = useState(false);\n\n  const getRandomQuote = async () => {\n    const response = await axios.get(\"https://api.quotable.io/random\");\n    if (response.status !== 200) {\n      throw Error(\"Error while fetching\");\n    }\n    setData(response?.data);\n  };\n\n  useEffect(() => {\n    getRandomQuote();\n  }, []);\n\n  return (\n    <Card\n      data={{\n        username: \"sgitwhyd\",\n        avatar: \"https://avatars.githubusercontent.com/u/44634025?v=4\",\n        apiUrl: \"https://api.quotable.io/random\",\n        apiName: \"Quotable\",\n        apiDescription: \"open source quotations API\",\n      }}\n    >\n      <div className=\"quote-wrapper mt-3\">\n        <div class=\"w-full mb-5\">\n          <div class=\"text-3xl text-indigo-500 text-left leading-tight h-3\">“</div>\n          <p class=\"text-sm text-gray-600 text-center px-5\">{data.content}</p>\n          <div class=\"text-3xl text-indigo-500 text-right leading-tight h-3 -mt-2\">”</div>\n        </div>\n        <div class=\"w-full\">\n          <p class=\"text-md text-indigo-500 font-bold text-center\">{data.author}</p>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default RandomQuotesApi;\n","import { Card } from \"../components\";\nimport {randomInteger} from './random-pokemon-image'\n\nconst RandomRobotImage = () => {\n  return (\n    <Card\n      data={{\n        username: \"saefullohmaslul\",\n        avatar: \"https://avatars.githubusercontent.com/u/20754023\",\n        apiUrl: \"https://robohash.org/\",\n        apiName: \"robohash\",\n        apiDescription: \"Random API for displaying Robot\",\n      }}\n    >\n      <img\n        className='rounded-sm pt-2 h-400 w-400'\n        src={`https://robohash.org/${\n          randomInteger(0, 150) + 1\n        }.png?set=set1`}\n        alt='robot'\n        loading=\"lazy\"\n      />\n    </Card>\n  );\n};\n\nexport default RandomRobotImage;\n","import { Card } from \"../components\";\n\n// avatar can get from here(avatar_url)\n// https://api.github.com/users/akimabs\n\nconst RandomTechImage = () => {\n  return (\n    <Card\n      data={{\n        username: \"hasbimsdd27\",\n        avatar: \"https://avatars.githubusercontent.com/u/58213577?v=4\",\n        apiUrl: \"https://placeimg.com/1000/1000/tech\",\n        apiName: \"placeimg.com\",\n        apiDescription: \"generate random tech image with custom dimension\",\n      }}\n    >\n      <img\n        className=\"rounded-sm pt-2\"\n        src=\"https://placeimg.com/1000/1000/tech\"\n        alt=\"techImage\"\n      />\n    </Card>\n  );\n};\n\nexport default RandomTechImage;\n","import { Card } from '../components';\n\nconst RandomUnsplashImage = () => {\n  return (\n    <Card\n      data={{\n        username: 'mhmdbhsk',\n        avatar: 'https://github.com/mhmdbhsk.png',\n        apiUrl: 'https://source.unsplash.com/random/800x600',\n        apiName: 'random-unsplash-image',\n        apiDescription:\n          'A simple way to embedding random Unsplash photo with custom parameter like size and Unsplash user',\n      }}\n    >\n      <img\n        className='rounded-sm pt-2'\n        src='https://source.unsplash.com/random/800x600'\n        alt='unsplashImage'\n      />\n    </Card>\n  );\n};\n\nexport default RandomUnsplashImage;\n","import { useState, useEffect } from \"react\";\nimport { Card } from \"../components\";\nimport axios from \"axios\";\n\nconst RandomUserProfile = () => {\n  const [data, setData] = useState({})\n  const [loading, setLoading] = useState(false)\n\n  const getRandomUserProfile = async () => {\n    setLoading(true);\n    const response = await axios.get(\"https://randomuser.me/api/\");\n    if (response.status !== 200) {\n      throw new Error(\"Fetching err\");\n    }\n    setData(response?.data?.results[0])\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    getRandomUserProfile();\n    return () => {\n      setLoading(false)\n    }\n  }, [])\n\n  return (\n    <Card\n      data={{\n        username: \"ahmadkhairul\",\n        avatar: \"https://avatars.githubusercontent.com/u/57492891?v=4\",\n        apiUrl: \"https://randomuser.me/api/\",\n        apiName: \"random-user-profile\",\n        apiDescription: \"generating random user data. Like Lorem Ipsum, but for people.\",\n      }}\n    >\n      {loading ? (\n        <p className=\"text-m my-3 text-center\">Loading...</p>\n      ) : (\n        <div className=\"flex flex-col\">\n          <img\n            className=\"rounded-sm pt-2\"\n            src={data?.picture?.large}\n            alt=\"profileImage\"\n          />\n          <table>\n            <tbody>\n              <tr>\n                <td>Name</td>\n                <td>:</td>\n                <td>{data?.name?.first} {data?.name?.last}</td>\n              </tr>\n              <tr>\n                <td>Gender</td>\n                <td>:</td>\n                <td>{data?.gender}</td>\n              </tr>\n              <tr>\n                <td>Phone</td>\n                <td>:</td>\n                <td>{data?.phone}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      )}\n    </Card>\n  );\n};\n\nexport default RandomUserProfile;\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport { Card } from \"../components\";\n\nconst randomizer = Math.floor(Math.random() * 826);\nconst BASE_URL = `https://rickandmortyapi.com/api/character/${randomizer}`;\n\nconst RandomFoodImage = () => {\n  const [data, setData] = useState({ image: \"\" });\n  const fetchData = async () => {\n    const response = await axios.get(BASE_URL);\n    if (response.status !== 200) {\n      throw new Error(\"Fetching err\");\n    }\n    setData(response?.data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <Card\n      data={{\n        username: \"honestyan\",\n        avatar: \"https://avatars.githubusercontent.com/u/37909888?v=4\",\n        apiUrl: \"https://rickandmortyapi.com/api/\",\n        apiName: \"rickandmortyapi\",\n        apiDescription:\n          \"a random api for display random cartoon character (rick and morty)\",\n      }}\n    >\n      <img\n        className=\"rounded-sm h-200 w-200 pt-2\"\n        src={data?.image}\n        alt=\"character\"\n      />\n    </Card>\n  );\n};\n\nexport default RandomFoodImage;\n","import RandomAiArtImage from \"./random-ai-art\";\nimport RandomAnimeWink from \"./random-anime-wink\";\nimport RandomAnswerImage from \"./random-answer-image\";\nimport RandomCatImage from \"./random-cat-image\";\nimport RandomDogImage from \"./random-dog-image\";\nimport RandomFoodImage from \"./random-food-image\";\nimport RandomFoxImage from \"./random-fox-image\";\nimport RandomGrayscaleImage from \"./random-grayscale-image\";\nimport RandomImageUnsplash from \"./random-image-unsplash\";\nimport RandomKanji from \"./random-kanji\";\nimport RandomLoremPixelImage from \"./random-lorem-pixel-image\";\nimport RandomMemeImage from \"./random-meme-image\";\nimport RandomPicsumImage from \"./random-picsum-image\";\nimport RandomPixelMonstersImage from \"./random-pixel-monsters-image\";\nimport RandomPokemonImage from \"./random-pokemon-image\";\nimport RandomQuotesApi from \"./random-quote\";\nimport RandomRobotImage from \"./random-robot-image\";\nimport RandomTechImages from \"./random-tech-images\";\nimport RandomUnsplashImage from \"./random-unsplash-image\";\nimport RandomUserProfile from \"./random-user-profile\";\nimport RandomCartoonChar from \"./random-cartoon-char\";\nimport RandomMeowFacts from \"./random-cat-facts\";\n\nexport const data_contributor = [\n  RandomFoxImage,\n  RandomAnimeWink,\n  RandomCatImage,\n  RandomTechImages,\n  RandomPokemonImage,\n  RandomUnsplashImage,\n  RandomPicsumImage,\n  RandomUserProfile,\n  RandomGrayscaleImage,\n  RandomImageUnsplash,\n  RandomLoremPixelImage,\n  RandomAnswerImage,\n  RandomDogImage,\n  RandomMemeImage,\n  RandomKanji,\n  RandomPixelMonstersImage,\n  RandomAiArtImage,\n  RandomQuotesApi,\n  RandomRobotImage,\n  RandomFoodImage,\n  RandomCartoonChar,\n  RandomMeowFacts,\n];\n","import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { Card } from \"../components\";\n\n// BASEURL: https://yesno.wtf/api\n\nconst BASE_URL = \"https://yesno.wtf/api\";\n\nexport default function RandomAnswerImage() {\n\tconst [answer, setAnswer] = useState([]);\n\tconst getAnswerRandom = async () => {\n\t\ttry {\n\t\t\tconst response = await axios.get(BASE_URL);\n\t\t\tsetAnswer(response.data);\n\t\t} catch (error) {\n\t\t\tthrow new Error(error.message);\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\tgetAnswerRandom();\n\t}, []);\n\treturn (\n\t\t<>\n\t\t\t<Card\n\t\t\t\tdata={{\n\t\t\t\t\tusername: \"riyaraa\",\n\t\t\t\t\tavatar: \"https://avatars.githubusercontent.com/u/50629099?v=4\",\n\t\t\t\t\tapiUrl: \"https://yesno.wtf/api\",\n\t\t\t\t\tapiName: \"answer-image-random-api\",\n\t\t\t\t\tapiDescription: \"this api generate random answer image\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<img src={answer.image} alt={answer.answer} />\n\t\t\t</Card>\n\t\t</>\n\t);\n}\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// components\nimport { Card } from \"../components\";\n// baseurl api's\nconst BASE_URL = \"https://meowfacts.herokuapp.com/\";\n\nconst RandomMeowFacts = () => {\n  const [dispatching, setDispatching] = useState(false);\n  const [randomFact, setRandomFact] = useState(\"\");\n\n  const getRandomCat = async () => {\n    setDispatching(true);\n    const response = await axios.get(BASE_URL);\n    if (response.status !== 200) {\n      throw new Error(\"Fetching err\");\n    }\n    setRandomFact(response?.data?.data[0]);\n    setDispatching(false);\n  };\n\n  useEffect(() => {\n    getRandomCat();\n    return () => {\n      setDispatching(false);\n    };\n  }, []);\n\n  return (\n    <Card\n      data={{\n        username: \"RWeebz\",\n        avatar: \"https://avatars.githubusercontent.com/u/75969194?v=4\",\n        apiUrl: `hhttps://meowfacts.herokuapp.com/`,\n        apiName: \"Random Meow Facts\",\n        apiDescription: \"Roll a fact about CAT that you don't know\",\n      }}\n    >\n      {dispatching ? (\n        <p className=\"text-m my-3 text-center\">Loading...</p>\n      ) : (\n        <div className=\"quote-wrapper mt-3\">\n          <div class=\"w-full mb-5\">\n            <div class=\"text-3xl text-indigo-500 text-left leading-tight h-3\">“</div>\n            <p class=\"text-sm text-gray-600 text-center px-5\">{randomFact}</p>\n            <div class=\"text-3xl text-indigo-500 text-right leading-tight h-3 -mt-2\">\n              ”\n            </div>\n          </div>\n        </div>\n      )}\n    </Card>\n  );\n};\n\nexport default RandomMeowFacts;\n","import \"./App.css\";\nimport { Header, MasonryWrapper } from \"./components\";\nimport { data_contributor } from \"./contributor\";\n\nfunction App() {\n  return (\n    <div className=\"mx-0 xl:mx-20 font-body\">\n      <Header />\n      <MasonryWrapper>\n        {data_contributor.map((res, index) => {\n          const Component = res;\n          return <Component key={index} />;\n        })}\n      </MasonryWrapper>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}